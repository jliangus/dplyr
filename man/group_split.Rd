% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/group_split.R
\name{group_split}
\alias{group_split}
\title{Split data frame by groups}
\usage{
group_split(.tbl, ...)
}
\arguments{
\item{.tbl}{A tbl}

\item{...}{Grouping specification, forwardsed to \code{\link[=group_by]{group_by()}}}
}
\value{
a list of tibbles. Each tibble contains the rows of \code{.tbl} for the associated group and
all the columns, including the grouoping variables.

However, in the presence of empty groups, the 0-rows tibbles associated with the empty
groups do not have grouping information. \code{\link[=group_split]{group_split()}} may be paired with \code{\link[=group_keys]{group_keys()}}.
}
\description{
Split data frame by groups
}
\examples{

# use case 1 : on an already grouped tibble
iris \%>\%
  group_by(Species) \%>\%
  group_split()

# this can be useful if the grouped data has been altered before the split
iris \%>\%
  group_by(Species) \%>\%
  filter(Sepal.Length > 6) \%>\%
  group_split()

# use case 2: using a group_by() grouping specification
iris \%>\%
  group_split(Species)

}
\concept{grouping functions

[group_split()] works like [base::split()] but
- it uses the grouping structure from [group_by()]
- it does not name the elements of the list based on the grouping as this typically
  loses information and is confusing.}
